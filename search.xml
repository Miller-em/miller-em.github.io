<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>三天通过计算机三级网络技术-选择题技巧</title>
      <link href="2021/03/26/computer_grade_3/multiple_choice_skills/"/>
      <url>2021/03/26/computer_grade_3/multiple_choice_skills/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>明天下午就要考计算机三级了，网络技术。。。慌得一批啊，对于计算机三级对网络技术的考察，我通过刷题的得到了许多套路的东西。这一部分就对选择题部分的重要知识点进行记录，方便以后还能够看看，当然能够帮助到别人还是不错的。</p><h2 id="RPR技术"><a href="#RPR技术" class="headerlink" title="RPR技术"></a>RPR技术</h2><ul><li>RPR和FDDI一样采用<strong>双环结构</strong><span id="more"></span></li><li>传统的 FDDI 环，当源结点向目的节点成功发送一个数据帧之后，这个数据帧由<strong>源结点</strong>从环中回收。但 <strong>RPR 环，这个数据帧由目的结点从环中回收</strong>。</li><li>RPR环能够在<strong>50ms</strong>实现自愈</li><li> RPR 环中每一个节点都执行 <strong>SRP 公平算法</strong></li><li>两个 RPR 结点间的裸光纤最大长度可达 100 公里。</li></ul><h2 id="宽带城域网"><a href="#宽带城域网" class="headerlink" title="宽带城域网"></a>宽带城域网</h2><h3 id="汇聚层"><a href="#汇聚层" class="headerlink" title="汇聚层"></a>汇聚层</h3><ul><li>汇接接入层的用户流量，进行数据分组传输的<strong>汇聚、转发与交换</strong></li><li>根据接入层的用户流量，进行本地路由、过滤、流量均衡、QoS 优先级管理，以及安全控制、IP 地址转换、流量整行等处理。</li><li>根据处理结果把用户流量转发到核心交换层或在本地进行路由处理。</li></ul><h2 id="接入技术"><a href="#接入技术" class="headerlink" title="接入技术"></a>接入技术</h2><ul><li>光纤传输系统的<strong>中继距离可达 100km</strong> 以上</li><li>Cable Modom（电缆调制解调器）利用**频分复用(FDM)**的方法将信道分为上行信道和下行信道</li><li>ASDL 使用一对铜双绞线，具有<strong>非对称技术特性</strong></li><li>将传输速率提高到 <strong>54Mbps</strong> 的是 <strong>802.11a 和 802.11g</strong>，<strong>802.11b</strong> 将传输速度提高到 <strong>11Mbps</strong>。</li><li>无线接入技术主要有：WLAN、WiMAX、WiFi、WMAN 和 Ad hoc等。</li><li>APON、DWDM、EPON 是光纤接入技术。</li></ul><h2 id="服务器技术"><a href="#服务器技术" class="headerlink" title="服务器技术"></a>服务器技术</h2><ul><li><strong>热插拔功能</strong>允许用户在不切断电源的情况下更换<strong>硬盘、板卡</strong>、<strong>电源</strong>等（不能更换主板、主背板）。</li><li><strong>磁盘性能</strong>表现在<strong>储存容量</strong>和 <strong>I/O 速度</strong>。</li><li><strong>集群技术</strong>中，如果一台主机出现故障，不会影响正常服务，但会影响系统性能。</li><li>服务器<strong>总体性能</strong>取决于 <strong>CPU 数量、CPU 主频、系统内存、网络速度</strong>(只写 CPU 数量错)</li></ul><h2 id="BGP-协议"><a href="#BGP-协议" class="headerlink" title="BGP 协议"></a>BGP 协议</h2><ul><li> BGP 采用<strong>路由向量协议</strong>，而RIP采用距离向量协议</li><li> BGP 交换路由信息的节点数不小于自治系统数。</li><li> BGP 不同自治系统(AS)的路由器之间使用的协议</li><li>一个 BGP 发言人使用 <strong>TCP（不是 UDP）</strong>与其他自治系统的 BGP发言人交换路由信息。</li><li> BGP 发言人通过 <strong>update</strong> 而不是 noticfication 分组通知相邻系统，使用 update 分组更新路由时，一个报文只能增加一条路由。</li></ul><h2 id="OSPF-协议"><a href="#OSPF-协议" class="headerlink" title="OSPF 协议"></a>OSPF 协议</h2><ul><li>OSPF 通过<strong>划分区域</strong>来提高路由更新收敛速度</li><li>每一个区域都是有一个32位的区域标识符</li><li>区域内路由器不超过 200 个</li><li>一个 OSPF 区域内每个路由器的链路状态数据库包含着**本区域(不是全网)**的拓扑结构信息，不知道其他区域的网络拓扑。</li><li>当链路状态发生变化时用<strong>洪泛法</strong>向所有(不是相邻)路由器发送此信息。</li></ul><h2 id="集线器"><a href="#集线器" class="headerlink" title="集线器"></a>集线器</h2><ul><li>工作在<strong>物理层</strong>，连接到一个集线器的所有结点共享/属于（不是独立）一个冲突域</li><li> 每次只有一个结点能够发送数据，而其他的结点都处于接收数据的状态（<strong>多个节点可以同时接受数据帧</strong>）。连接到集线器的节点发送数据时，该节点将执行 <strong>CSMA/CD（不是 CA）</strong>介质访问控制方法。</li><li>采用 RISC 结构处理器的服务器通常使用 UNIX 系统(不是Windows、Android)。</li><li>RAID 技术可以提磁盘存储容量但是不能提高容错能力</li><li>在网络链路中串接一个集线器可以监听该链路中的数据包。</li></ul><h2 id="布线"><a href="#布线" class="headerlink" title="布线"></a>布线</h2><ul><li>双绞线可以<strong>避免电磁干扰</strong>。</li><li>嵌入式插座用来连接双绞线。（不是连接楼层配线架）</li><li>多介质插座用来连接<strong>铜缆</strong>和<strong>光纤</strong>（写其他的错），满足用户“光纤到桌面”的需求。</li><li>建筑群子系统可以是多种布线方式的任意组合（“一般用双绞线连接”错）。 </li><li>STP比UTP 成本高、复杂，但抗干扰能力强、辐射小</li><li>对于高速率终端可采用光纤直接到桌面的方案</li><li> 管理子系统设置在楼层配线间内，提供与其他子系统连接的手段。</li></ul><h2 id="IEEE"><a href="#IEEE" class="headerlink" title="IEEE"></a>IEEE</h2><ul><li> IEEE 802.11 的三个物理层定义包括了<strong>两个扩频技术（FHSS、DSSS）</strong>和<strong>一个红外传播规范</strong>。</li><li>802.11 无线传输频道定义在 2.4GHz ISM 频段，<strong>定义的传输速率是</strong> 1Mbps 和 2Mbps。</li><li>IEEE802.11 在 MAC 子层引入了一个 <strong>RTS/CTS</strong> 选项。</li><li>IEEE802.11 运行在 2.4GHz ISM 频段，最大传输速率是1~2Mbps</li><li> IEEE802.11b 运行在 2.4GHz ISM 频段，最大传输速率是11Mbps，最大容量是 33Mbps</li><li>IEEE 802.1d 是当前最流行的 <strong>STP（生成树协议）标准</strong>。</li><li>点对点模式是指<strong>无线网卡和无线网卡</strong>之间的通信方式。它最多可以允许 <strong>256</strong> 台 PC 连接。</li><li>无线接入点 AP 的作用是提供无线和有线网络之间的桥接，而非无线结点。</li></ul><h2 id="www-服务器"><a href="#www-服务器" class="headerlink" title="www 服务器"></a>www 服务器</h2><ul><li>建立 Web 站点时必须为该站点指定一个<strong>主目录</strong>（不一定在本地计算机/服务器），也可以是<strong>虚拟的子目录</strong>。</li><li>设置了默认页面，访问时才会直接(自动)打开 default.html</li><li><strong>带宽限制选项</strong>限制该网站的可使用带宽；<strong>网站连接选项</strong>可设置客户端 Web 连接数量</li></ul><h2 id="FTP-服务器"><a href="#FTP-服务器" class="headerlink" title="FTP 服务器"></a>FTP 服务器</h2><ul><li>初始状态下没有设置管理员密码，可以直接进入 Serv-U 管理程序</li><li>向服务器中添加“anonymous”，系统自动判定为匿名用户。而不是创建新域时<strong>自动</strong>添加一个“anonymous”匿名。</li><li>FTP 服务器缺省端口号为 <strong>21</strong>，但是有时因为某种原因则不能使用 21 号端口，但可以选择其他合适的端口号。</li><li>服务器可构建多个由 IP 地址和端口号识别的虚拟服务器，每个虚拟服务器（域）<strong>由 IP 地址和端口号唯一识别</strong>，<strong>而不是只依靠 IP 地址。</strong></li></ul><h2 id="邮件（Winmail-邮件服务器）"><a href="#邮件（Winmail-邮件服务器）" class="headerlink" title="邮件（Winmail 邮件服务器）"></a>邮件（Winmail 邮件服务器）</h2><ul><li>Winmail 邮件服务器支持基于 <strong>Web 方式</strong>的访问和管理，因此在安装邮件服务器软件之前要安装 IIS</li><li>Winmail 邮件服务器允许用户自行注册新邮箱，需输入邮箱名、密码等信息，<strong>而域名是服务器固定的，并不能自行设置</strong>。但 Winmail 用户不可以使用 Outlook 自行注册新邮箱。</li><li> 在 <strong>Winmail 快速设置向导</strong>（<strong>不是系统设置</strong>）中创建新用户时，输入新建用户的信息，包括用户名、域名及用户密码（不是系统邮箱的密码、管理员密码），可选择是否允许客户通过Winmail 注册新邮箱</li></ul><h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><ul><li><p>SYN Flooding 攻击：使用无效的 IP 地址，利用 TCP 连接的三次握手过程，使得受害主机处于开放会话的请求之中，直至连接超时。在此期间，受害主机将会连续接受这种会话请求,最终因耗尽资源而停止响应。</p></li><li><p>DDos 攻击：利用攻破的多个系统发送大量请求去集中攻击其他目标，受害设备因为无法处理而拒绝服务。</p></li><li><p>SQL 注入攻击：属于利用系统漏洞，基于网络的入侵防护系统和基于主机入侵防护系统都难以阻断。<strong>防火墙（基于网络的防护系统）无法阻断这种攻击。</strong></p></li><li><p> Land 攻击：向某个设备发送数据包，并将数据包的源 IP 地址和目的地址都设置成攻击目标的地址。</p></li><li><p>协议欺骗攻击：通过伪造某台主机的 IP 地址窃取特权的攻击。有以下几种：（1）IP 欺骗攻击。（2）ARP 欺骗攻击。（3）DNS 欺骗攻击。（4）源路由欺骗攻击。</p></li><li><p>DNS 欺骗攻击：攻击者采用某种欺骗手段，使用户查询服务器进行域名解析时获得一个错误的 IP 地址，从而可将用户引导到错误的 Internet 站点。</p></li><li><p>IP 欺骗攻击：通过伪造某台主机的 IP 地址骗取特权，进而进行攻击的技术。</p></li><li><p>Cookie 篡改攻击：通过对 Cookie 的篡改可以实现非法访问目标站点，基于网络的入侵防护系统无法阻断。</p></li><li><p>Smurf 攻击：攻击者冒充受害主机的 IP 地址，向一个大的网络发送 echo request 的定向广播包，此网络的许多主机都做出回应，受害主机会收到大龄的 echo reply 消息。基于网络的入侵防护系统可以阻断 Smurf 攻击。</p></li><li><p>基于网络的防护系统无法阻断 <strong>Cookie 篡改</strong>、<strong>DNS 欺骗</strong>、<strong>SQL注入</strong>。</p></li><li><p>基于网络的入侵防护系统和基于主机入侵防护系统都难以阻断的是跨站脚本攻击、SQL 注入攻击。 </p></li></ul><h2 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h2><ul><li> VLAN 以交换式网络为基础。</li><li>VLAN 工作在 OSI 参考模型的第二层(数据链路层)，而不是网络层。VLAN 之间通信必须通过路由器。</li></ul><h2 id="蓝牙"><a href="#蓝牙" class="headerlink" title="蓝牙"></a>蓝牙</h2><ul><li>工作频段在 2.402GHz~2.480GHz 的ISM 频段。</li><li>同步信道速率 64kbps。</li><li>标称数据速率是 1Mbps。</li><li>非对称的异步信道速率为 723.2kbps/57.6kbps，对称的异步信道速率为 433.9kbps（全双工）。</li></ul><h2 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h2><ul><li>高性能路由器一般采用采用可交换式的结构，传统的核心路 由器采用共字背板的结构。</li><li>丢包率是衡量路由器超负荷工作时的性能指标之一。(“路由表容量”不是) </li><li>吞吐量是指路由器的包转发能力，包括端口吞吐量与整机吞吐量。背板能力决定路由器吞吐量。（不是吞吐量决定了路由器的背板能力） </li></ul><h2 id="其他知识点"><a href="#其他知识点" class="headerlink" title="其他知识点"></a>其他知识点</h2><ul><li><p>无源光纤网FPON，按照ITU标准可分为两部分:(1) <strong>OC-3，155.520 Mbps</strong> 的对称业务。(2) <strong>上行OC-3，155.520 Mbps</strong>，下行<strong>0C-12, 622.080 Mbps</strong>的不对称业务。</p></li><li><p>全双工端口的带宽计算方法：<strong>端口数x端口速率x2</strong>.</p></li><li><p><strong>ipconfig</strong>显示当前TCP/ITP网络配置，<strong>netstat</strong>显示本机与远程计算机的基于TCP/IP的NeTBIOS的统计及连接信息，<strong>pathping</strong>将报文发送到所经过地所有路由器，并根据每一跳返回的报文进行统计;<strong>route</strong>显示或修改本地IP路由表条目。</p></li><li><p>三种备份的比较：</p><table><thead><tr><th>比较</th><th></th><th align="center">有大到小， 由快到慢</th><th></th></tr></thead><tbody><tr><td>空间使用</td><td>完全备份</td><td align="center">差异备份</td><td>增量备份</td></tr><tr><td>备份速度</td><td>增量备份</td><td align="center">差异备份</td><td>完全备份</td></tr><tr><td>恢复速度</td><td>完全备份</td><td align="center">差异备份</td><td>增量备份</td></tr></tbody></table></li><li><p>Cisco PIX 525防火墙：</p><ul><li>特权模式：PIX防火墙开机自检后，即处于此种模式。</li><li>非特权模式：</li><li>监视模式：可以进行操作系统映像更新和口令恢复</li><li>配置模式：</li></ul></li></ul><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://zhuanlan.zhihu.com/p/56552345">计算机三级网络技术笔记（精华版）写文章</a> </p>]]></content>
      
      
      <categories>
          
          <category> 计算机三级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始搭建个人博客</title>
      <link href="2021/02/26/Blog/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2021/02/26/Blog/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>我是在<strong>Ubuntu 20.04</strong> 下面搭建的博客，所以下面记录操作的命令都是针对于Ubuntu下面的命令。对于Windows下面的搭建，现在暂时还没有尝试，以后遇到了再更新操作。特别说明该个人博客是基于<strong>hexo</strong>框架搭建的，服务端是交于<strong>github</strong>管理的。</p><span id="more"></span><h2 id="安装nodejs-npm"><a href="#安装nodejs-npm" class="headerlink" title="安装nodejs, npm"></a>安装nodejs, npm</h2><p>因为hexo框架是依赖于nodejs，所以我们需要先安装好<strong>nodejs</strong>和包管理器<strong>nmp</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nodejs npm</span><br></pre></td></tr></table></figure><p>查看是否安装成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br><span class="line">npm --version</span><br></pre></td></tr></table></figure><p>正常输出就安装成功了。</p><h2 id="安装cnmp"><a href="#安装cnmp" class="headerlink" title="安装cnmp"></a>安装cnmp</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>这里要加入源，我用的是taobao源。检查一下安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><h2 id="安装hexo框架"><a href="#安装hexo框架" class="headerlink" title="安装hexo框架"></a>安装hexo框架</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>检查一下安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h2 id="创建博客目录并初始化"><a href="#创建博客目录并初始化" class="headerlink" title="创建博客目录并初始化"></a>创建博客目录并初始化</h2><p>我在家目录下面创建了一个<code>~/PersonalBlog/</code>，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir PersonalBlog &amp;&amp; cd PersonalBlog</span><br></pre></td></tr></table></figure><p><strong>hexo</strong>初始化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm audix fix</span><br></pre></td></tr></table></figure><p>本地运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>点击 <a href="http://localhost:4000/">http://localhost:4000</a> ，博客页面在本地就有了。</p><p><img src="https://cdn.jsdelivr.net/gh/Miller-em/IMAGS/img/20210325111017.png" alt="image-20210225150228015"></p><h2 id="创建第一篇博客"><a href="#创建第一篇博客" class="headerlink" title="创建第一篇博客"></a>创建第一篇博客</h2><p>创建第一篇博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;My First Blog&quot;</span><br></pre></td></tr></table></figure><p>然后vim向 <code>~/PersonalBlog/source/_posts/My-First-Blog.md</code> 随便写入：</p><p><img src="https://cdn.jsdelivr.net/gh/Miller-em/IMAGS/img/20210325111603.png" alt="image-20210325111602924"></p><p><code>:wq</code>退出</p><p>然后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>看看效果：</p><p><img src="https://cdn.jsdelivr.net/gh/Miller-em/IMAGS/img/20210325111730.png" alt="image-20210325111730245"></p><h2 id="github服务端部署"><a href="#github服务端部署" class="headerlink" title="github服务端部署"></a>github服务端部署</h2><p>在github账户下创建一个仓库，仓库名必须是：<strong>xxx.github.io</strong>，所以我的就是<code>miller-em.github.io</code>，欢迎访问，哈哈哈。</p><p>安装hexo-deployer-git:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>修改博客根目录下的<code>_config.yml</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>最后这里修改一下：</p><p><img src="https://cdn.jsdelivr.net/gh/Miller-em/IMAGS/img/20210325111808.png" alt="image-20210325111807897"></p><p>保存退出后，推向github服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>输入你的github用户名和密码，成功后在浏览器输入：xxx.github.io，看看效果：</p><p><img src="https://cdn.jsdelivr.net/gh/Miller-em/IMAGS/img/20210325111838.png" alt="image-20210325111838715"></p><p>到这里，你的个人博客搭建就完成了！</p><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>我觉得原始主题不太符合我的style，所以我就换了一个主题。我用的是nexT主题，黑白配色简约淡雅。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next.git themes&#x2F;next</span><br></pre></td></tr></table></figure><p>修改<code>_config.yml</code>，将主题改为next：</p><p><img src="https://cdn.jsdelivr.net/gh/Miller-em/IMAGS/img/20210325111948.png" alt="image-20210325111948090"></p><h2 id="配置NexT"><a href="#配置NexT" class="headerlink" title="配置NexT"></a>配置NexT</h2><ol><li><p>设置博客根目录下_config.yml：</p><p><img src="https://cdn.jsdelivr.net/gh/Miller-em/IMAGS/img/20210325112005.png" alt="image-20210325112005322"></p></li><li><p>设置菜单栏：</p><p><img src="https://cdn.jsdelivr.net/gh/Miller-em/IMAGS/img/20210325112020.png" alt="image-20210325112020464"></p><p>在<code>themes/next/_config.yml</code>下面的查看menu.</p><p>在根目录下面，输入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot; </span><br><span class="line">hexo new page &quot;tags&quot;</span><br><span class="line">hexo new page &quot;categories&quot;</span><br><span class="line">hexo new page &quot;archives&quot;</span><br><span class="line">hexo new page &quot;search&quot;</span><br></pre></td></tr></table></figure><p>此时在根目录的sources文件夹下会生成categories、tags、about、archives、search四个文件，每个文件中有一个<code>index.md</code>文件：</p></li><li><p>设置建站时间</p><p>打开主题配置文件即themes/next下的_config.yml，查找since：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup. If not defined, current year will be used.</span><br><span class="line">  since: 2021-02</span><br></pre></td></tr></table></figure></li><li><p>设置头像</p><p>打开主题配置文件即themes/next下的_config.yml，查找avatar，url后是图片的链接地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: &#x2F;images&#x2F;avatar.gif</span><br><span class="line">  # If true, the avatar will be dispalyed in circle.</span><br><span class="line">  rounded: true</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: tru</span><br></pre></td></tr></table></figure></li><li><p>网站图标设置</p><p>我是在这个网站找的图标，免费的图标素材网站：<a href="https://link.zhihu.com/?target=https://www.easyicon.net/1220579-maple_leaf_icon.html">Easyicon</a></p><p>下载16x16和32x32的图标后，打开主题配置文件，查找favicon，只要修改small和medium为你的图标路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: &#x2F;images&#x2F;favicon-16x16-next.png</span><br><span class="line">  medium: &#x2F;images&#x2F;favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: &#x2F;images&#x2F;apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: &#x2F;images&#x2F;logo.svg</span><br><span class="line">  #android_manifest: &#x2F;images&#x2F;manifest.json</span><br><span class="line">  #ms_browserconfig: &#x2F;images&#x2F;browserconfig.xml</span><br></pre></td></tr></table></figure></li><li><p>设置博文内链接为蓝色</p><p>打开themes/next/source/css/_common/components/post/post.styl文件，将下面的代码复制到文件最后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.post-body p a&#123;</span><br><span class="line">     color: #0593d3;</span><br><span class="line">     border-bottom: none;</span><br><span class="line">     &amp;:hover &#123;</span><br><span class="line">       color: #0477ab;</span><br><span class="line">       text-decoration: underline;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>显示文章字数和阅读时长</p><p>从根目录Blog打开Git Bash，执行下面的命令，安装插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后打开<strong>站点配置文件，</strong>在文件末尾加上下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true                # 文章字数统计</span><br><span class="line">  time: true                   # 文章阅读时长</span><br><span class="line">  total_symbols: true          # 站点总字数统计</span><br><span class="line">  total_time: true             # 站点总阅读时长</span><br><span class="line">  exclude_codeblock: false     # 排除代码字数统计</span><br></pre></td></tr></table></figure></li><li><p>添加Fork me on Github</p><p>选择你喜欢的类型，打开<a href="https://link.zhihu.com/?target=http://tholman.com/github-corners/">小猫</a>或者<a href="https://link.zhihu.com/?target=https://github.blog/2008-12-19-github-ribbons/">字</a>，复制代码添加到themes/next/layout/_layout.swig文件中，放在<div class="headband"></div>后面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;headband&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;Miller_em&quot; class&#x3D;&quot;github-corner&quot; ....</span><br></pre></td></tr></table></figure></li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="http://www.codesheep.com/">www.codesheep.com</a></p><p><a href="https://zhuanlan.zhihu.com/p/106060640">个人博客第8篇——优化主题（持续更新）</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Pytorch训练一个图像分类器</title>
      <link href="2021/02/26/deep_learning/%E5%88%A9%E7%94%A8pytorch%E8%AE%AD%E7%BB%83%E4%B8%80%E4%B8%AA%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB%E5%99%A8/"/>
      <url>2021/02/26/deep_learning/%E5%88%A9%E7%94%A8pytorch%E8%AE%AD%E7%BB%83%E4%B8%80%E4%B8%AA%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>学习一个框架最快的方式就是，自己利用框架针对某个案例自己敲一遍。而作为一个AI视觉者，入门的案例肯定是图像分类，所以，我选择了pytorch官网里的tutorials的一个例子。对于深度学习来说，肯定要经过下面几个步骤：<strong>数据处理（类型转换，归一化）</strong>， <strong>搭建网络结构</strong>，<strong>训练</strong>，<strong>测试</strong>，<strong>导出/加载模型</strong>。下面我将会用这个例子实践以上方面，加深对Pytorch基本语法的掌握。</p> <span id="more"></span><h2 id="关于数据"><a href="#关于数据" class="headerlink" title="关于数据"></a>关于数据</h2><p>一般来说，当你用pytorch来做深度学习有关的事情的时候，比如说处理图像，音频，文本和视频，你都是需要用一些python的包来将numpy类型的数据转化为<code>torch *Tensor</code></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pytorch </tag>
            
            <tag> python </tag>
            
            <tag> classfication </tag>
            
            <tag> CV </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
